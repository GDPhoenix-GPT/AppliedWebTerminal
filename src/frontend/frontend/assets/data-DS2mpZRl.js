import{d as l}from"./node-modules_pinia-CDiED6eR.js";import{W as f}from"./core-DIUAuEYf.js";import{L as e}from"./utils-DPPkojbW.js";function u(){return{title:"Applied Web Terminal"}}const S="/settings";function v(r,a=()=>{}){e.info("Fetching server config..."),fetch(S,{method:"GET",mode:"cors",cache:"no-cache",headers:{"Content-Type":"application/json"}}).then(o=>{o.ok?o.json().then(n=>{e.info("Fetch ServerConfig.yaml Success :"),e.info(n),r(n)}):(e.warn("Fetch ServerConfig.yaml Error :"),e.warn(o.toString()),a(o))})}function h(){return{localConfig:g().localConfigStoreManager.get(),serverConfig:u()}}const w=l("appConfig",{state:()=>h()});function m(){return{language:"en_us"}}class p{constructor(a,t,o=window.localStorage){this.defaultValue=a,this.localStorageKey=t,this.store=o}get(){e.info(`LocalStorageManager getting ${this.localStorageKey}`);const a=this.store.getItem(this.localStorageKey);let t;return a?t=JSON.parse(a):(e.warn(`LocalStorageManager get ${this.localStorageKey} is empty, setting default.`),t=this.defaultValue(),this.set(t)),e.info(`LocalStorageManager got ${this.localStorageKey}:`),e.debug(t),t}set(a){e.info(`LocalStorageManager setting ${this.localStorageKey}:`),e.debug(a);const t=JSON.stringify(a);this.store.setItem(this.localStorageKey,t)}}function g(){return{localConfigStoreManager:new p(m,"LocalStorage"),webSocketService:new f,inTerminalPage:!1}}const T=l("appStorage",{state:()=>g()}),c=60*60*1e3,$=l("translate",{state:()=>({translations:new Map}),actions:{async getTranslation(r,a){const t=`${r}_${a}`,o=new Date().getTime();if(this.translations.has(t)&&o-this.translations.get(t).timestamp<c)return e.info("use cached translate"),this.translations.get(t).value;const s=localStorage.getItem(t);if(s){const n=localStorage.getItem(`${t}_timestamp`);if(n&&o-Number(n)<c)return e.info("use localStorage translate"),this.translations.set(t,{value:s,timestamp:Number(n)}),s}try{const n=await fetch(`/translate/${r}/${a}`);if(n.ok){const i=await n.text();return this.translations.set(t,{value:i,timestamp:o}),localStorage.setItem(t,i),localStorage.setItem(`${t}_timestamp`,o.toString()),i}}catch{e.error("Could not find translate text")}}}});export{T as a,$ as b,v as f,w as u};
